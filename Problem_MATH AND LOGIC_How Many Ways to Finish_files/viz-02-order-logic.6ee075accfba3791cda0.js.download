(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[95],{1584:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const s=n(11);let o=null;function i(){o=Date.now()}function a(e,t){if(!e.ports.analytics){return}e.ports.analytics.subscribe(e=>{s.track("ui",Object.assign(Object.assign({},e),{visualization_name:t}))})}t.setupAnalytics=a},1585:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});let s=null;function o(e){if(e.ports.touchMoved){e.ports.touchMoved.subscribe(({x:e,y:t,searchClass:n})=>{const o=document.elementsFromPoint(e,t);const i=o.filter(e=>e.classList.contains(n));if(i.length>=1){const e=i[0];if(s!==e){e.dispatchEvent(new Event("touchenter"));if(s!==null){s.dispatchEvent(new Event("touchleave"))}s=e}}else{if(s!==null){s.dispatchEvent(new Event("touchleave"))}s=null}})}}t.default=o},1587:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const s=n(1);const o=s.__importDefault(n(1585));const i=n(1584);const a=n(13);const l=n(7);const r=s.__importStar(n(1608));if(false){}function c(e){return e==="submittable"||e==="auto-check"?e:null}function u(e){const t=t=>d(t,e);if(Object.values(e.modes).some(p)){const n=(t,n)=>v(t,n,e);return{createInteractive:t,createInteractiveSolvable:n}}return{createInteractive:t}}t.default=u;function d(e,{modes:t}){const n=t[e.data.mode];const[s,o]=f(n,e,"playground");return o}function v(e,t,{modes:n}){const s=n[e.data.mode];if(!s){throw new Error(`${s} is not a valid mode for this type of interactive.`)}const o=s.validInteractiveTypes.reduce((e,t)=>{const n=c(t);if(n!==null){e.push(n)}return e},[]);let i;if(o.length===0){throw new Error("This is not a solvable interactive.")}else if(o.length===1){i=o[0]}else{const t=c(e.data.solvableType);if(!e.data.solvableType){throw new Error(`This interactive can be either Submittable or Auto-Checked.\n        Please select one in the configuration for this interactive.`)}else if(t===null){throw new Error(`${e.data.solvableType} is not a valid type for an Interactive Solvable.\n        Please make sure that the 'solvableType' attribute is set to 'auto-check' or 'submittable'.`)}else{i=t}}const[a,l]=f(s,e,i,{hasBeenSolved:t.hasBeenSolved});a.ports.solvableOut.subscribe(e=>y(t,e));return Object.assign({solvableType:i,checkAnswerPressed:()=>a.ports.solvableIn.send("checkAnswerPressed"),resetPressed:()=>a.ports.solvableIn.send("resetPressed")},l)}const b=["Macintosh","MacIntel","MacPPC","Mac68K"];function f(e,t,n,s){const a=document.getElementById(t.visualizationKey);if(!a){throw new Error(`No element found at ${t.visualizationKey}`)}else{a.innerHTML="";a.classList.add("viz-elm");const l=document.createElement("div");a.append(l);const r=b.includes(window.navigator.platform)?"cmd":"ctrl";const c=Object.assign(Object.assign(Object.assign(Object.assign({},t),{interactiveType:n}),s),{mainModifierKey:r,initialWidth:Math.floor(l.getBoundingClientRect().width)});const u=Object.assign(Object.assign({},e.module.init({flags:c,node:l})),{root:a});i.setupAnalytics(u,t.slug);h(u,t.visualizationKey);m(u,t.onError);if(e.usesDandy){o.default(u)}let d=null;if(e.afterInitializing){d=e.afterInitializing(u)}const v=()=>{u.ports.kill.send(null);if(d){d()}};return[u,{kill:v}]}}function p(e){return e.validInteractiveTypes.includes("auto-check")||e.validInteractiveTypes.includes("submittable")}function h(e,t){l.$window.on(a.EVT_QUIZ_POSITION_WILL_CHANGE,()=>{e.ports.problemContainerEvents.send({eventType:"quizPositionWillChange"})});l.$window.on(a.EVT_DAILYPROBLEM_MAINBODY_EXPANDED,()=>{e.ports.problemContainerEvents.send({eventType:"dailyChallengeMainBodyExpanded"})})}function m(e,t){e.ports.loadingFailed.subscribe(e=>{if(t){t(new Error(e))}else{throw new Error(e)}})}function y({callbacks:e},t){switch(t.type){case"setCaption":e.setCaption(t.caption);break;case"saveState":e.saveState(t.state,t.solved);break;case"setSubmitButtonEnabled":e.setSubmitButtonEnabled(t.enabled);break;case"setResetButtonEnabled":e.setResetButtonEnabled(t.enabled);break}}},718:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:true});const s=n(1);const o=s.__importDefault(n(1587));const i=n(1601);t.default=o.default({modes:{puzzle:{module:i.Elm.OrderLogic.PuzzleMode,usesDandy:true,validInteractiveTypes:["playground","auto-check","submittable"]},solution:{module:i.Elm.OrderLogic.SolutionMode,validInteractiveTypes:["playground"]}}})}}]);
//# sourceMappingURL=viz-02-order-logic.6ee075accfba3791cda0.js.map